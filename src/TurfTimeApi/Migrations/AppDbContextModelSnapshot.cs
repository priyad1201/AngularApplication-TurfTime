// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurfTimeApi.Context;

#nullable disable

namespace TurfTimeApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TurfTimeApi.Models.BookingDetails", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookingId"), 1L, 1);

                    b.Property<DateTime>("dateOfBooking")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateOfSlot")
                        .HasColumnType("datetime2");

                    b.Property<int>("numberOfHours")
                        .HasColumnType("int");

                    b.Property<string>("paymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pricePerHour")
                        .HasColumnType("int");

                    b.Property<string>("reservationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sportImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.Property<string>("venueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookingId");

                    b.HasIndex("userId");

                    b.ToTable("tbl_booking_details");
                });

            modelBuilder.Entity("TurfTimeApi.Models.Feedback", b =>
                {
                    b.Property<int>("feedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedbackId"), 1L, 1);

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("feedbackDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ratings")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("feedbackId");

                    b.ToTable("tbl_feedback");
                });

            modelBuilder.Entity("TurfTimeApi.Models.Game", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceForWeekday")
                        .HasColumnType("int");

                    b.Property<int>("priceForWeekend")
                        .HasColumnType("int");

                    b.Property<string>("sportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("venueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("tbl_games");
                });

            modelBuilder.Entity("TurfTimeApi.Models.Payment", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paymentId"), 1L, 1);

                    b.Property<int>("advanceAmount")
                        .HasColumnType("int");

                    b.Property<int>("balanceAmount")
                        .HasColumnType("int");

                    b.Property<int>("bookingId")
                        .HasColumnType("int");

                    b.Property<string>("cardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("cardNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("cvv")
                        .HasColumnType("int");

                    b.Property<string>("expiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("paymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("virtualPaymentAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paymentId");

                    b.ToTable("tbl_payment");
                });

            modelBuilder.Entity("TurfTimeApi.Models.TimeSlot", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("BookingDetailsbookingId")
                        .HasColumnType("int");

                    b.Property<string>("endTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BookingDetailsbookingId");

                    b.ToTable("tbl_timeslot");
                });

            modelBuilder.Entity("TurfTimeApi.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"), 1L, 1);

                    b.Property<string>("emailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("mobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("tbl_users");
                });

            modelBuilder.Entity("TurfTimeApi.Models.BookingDetails", b =>
                {
                    b.HasOne("TurfTimeApi.Models.User", null)
                        .WithMany("myBookings")
                        .HasForeignKey("userId");
                });

            modelBuilder.Entity("TurfTimeApi.Models.TimeSlot", b =>
                {
                    b.HasOne("TurfTimeApi.Models.BookingDetails", null)
                        .WithMany("timeSlots")
                        .HasForeignKey("BookingDetailsbookingId");
                });

            modelBuilder.Entity("TurfTimeApi.Models.BookingDetails", b =>
                {
                    b.Navigation("timeSlots");
                });

            modelBuilder.Entity("TurfTimeApi.Models.User", b =>
                {
                    b.Navigation("myBookings");
                });
#pragma warning restore 612, 618
        }
    }
}
